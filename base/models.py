from django.db import models
# importing the built-in user model from django
# from django.contrib.auth.models import User
# now we are going to use our awn customized user model.
from django.contrib.auth.models import AbstractUser

class User(AbstractUser):
    name = models.CharField(max_length=200,null=True)
    email=models.EmailField(unique=True,null=True)
    bio=models.TextField(null=True)

    # need the package pillow to preprocess the image.
    avatar=models.ImageField(null=True,default="avatar.svg")

    USERNAME_FIELD='email'
    REQUIRED_FIELDS=[]

class Topic(models.Model):
    name=models.CharField(max_length=200)

    def __str__(self):
        return self.name 

# the model for the chatroom
class Room(models.Model):
    # models by default has id generated by them.
    host= models.ForeignKey(User,on_delete=models.SET_NULL,null=True)
    topic= models.ForeignKey(Topic,on_delete=models.SET_NULL,null=True)
    name = models.CharField(max_length=50)
    description = models.TextField(null=True,blank=True)
    participants= models.ManyToManyField(User,related_name='participants',blank=True)
    updated= models.DateTimeField(auto_now=True)
    created= models.DateTimeField(auto_now=True)

    # this is here to make sure that the recently updated or created rooms will be featured first in the homepage. 
    class Meta:
        ordering =['-updated','-created']

    def __str__(self):
        return str(self.name)

class Message(models.Model):
    user = models.ForeignKey(User, on_delete=models.CASCADE)
    room = models.ForeignKey(Room,on_delete = models.CASCADE)
    body = models.TextField()
    updated = models.DateTimeField(auto_now=True)
    created = models.DateTimeField(auto_now_add=True)

    class Meta:
        ordering =['-updated','-created']
        
    def __str__(self):
        return self.body[0:50]